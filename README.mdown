LAA Legal Adviser API
=====================

Service to search for LAA Legal Advisers by lat/lon.

Dependencies
------------

 * Virtualenv
 * Python 2.7
 * Postgres => 9.3


Installation
------------

```sh
# Install Virtualenv if necessary
# sudo may be required if Python is not installed via brew
pip install virtualenv

# Create a virtualenv
# In the directory in which the virtualenv directory should be created
virtualenv -p python2 venv

# Start the virtualenv
source venv/bin/activate

# Install further requirements with pip, assuming you are in the
# project directory
pip install -r requirements/development.txt

# Create a new database using an admin account, where YOUR_PASSWORD and YOUR_USERNAME should
# be substituted for your admin account credentials, not using quotes
PGPASSWORD=YOUR_PASSWORD psql --host localhost -U YOUR_USERNAME -f ./sql/create_db.sql

# Create an unprivileged account with username 'postgres' and password 'postgres' for
interacting with the database (or create laalaa/settings/local.py with alternative
credentials).

# Use the chosen account to run the following commands in psql, with the new database selected:

PGPASSWORD=postgres psql --host localhost -U postgres -f ./sql/create_extensions.sql

# Create the database tables and populate with dummy data
# and create a Django admin account:
python manage.py migrate
python manage.py createsuperuser --username=admin

```

Each Run
--------

```sh
#Add the correct environment variable
export POSTCODEINFO_AUTH_TOKEN=auth-token-no-space-or-quotes 
```

...or add it to your local.py in laalaa/settings.

Run:

```sh
python manage.py runserver
```

There is a Django admin site which allows importing and editing the database
of legal advisers.

Go to admin/ and sign in with the admin password you just set.


# Jenkins CI Build Jobs
The development build job and the development & prod deploy jenkins jobs are here http://jenkins.dsd.io/view/laalaa/

The docker image is built on a jenkins slave (cla-slave) and pushed to the docker registry - https://registry.service.dsd.io. If successful, a development deploy job is triggered on an EC2 instance. The prod deploy job is triggered manually. More information on the deployment is available here https://github.com/ministryofjustice/laalaa-deploy/blob/master/README.rst
