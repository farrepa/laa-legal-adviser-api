version: 2
jobs:
  build:
    docker:
      - image: docker:17.03-git
    environment:
      DOCKER_REGISTRY: "registry.service.dsd.io"
      DOCKER_IMAGE: "laalaa"
    steps:
      - checkout
      - setup_remote_docker:
          version: 17.03.0-ce
          docker_layer_caching: true
      - run:
          name: Login to container registry
          command: |
            docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD --email "${DOCKER_USERNAME}@digital.justice.gov.uk" $DOCKER_REGISTRY
      - run:
          name: Build Docker image
          command: |
            docker build --tag $DOCKER_REGISTRY/$DOCKER_IMAGE:$CIRCLE_SHA1 .
      - run:
          name: Validate Python version
          command: |
            docker run --rm --tty --interactive $DOCKER_REGISTRY/$DOCKER_IMAGE:$CIRCLE_SHA1 python --version | grep "2.7"
      - run:
          name: Tag and push Docker images
          command: |
            export built_tag="$DOCKER_REGISTRY/$DOCKER_IMAGE:$CIRCLE_SHA1"
            docker push $built_tag

            export safe_git_branch=${CIRCLE_BRANCH//\//-}
            export branch_shortsha_tag="$DOCKER_REGISTRY/$DOCKER_IMAGE:$safe_git_branch.$(git rev-parse --short=7 $CIRCLE_SHA1)"
            export branch_latest_tag="$DOCKER_REGISTRY/$DOCKER_IMAGE:$safe_git_branch.latest"

            for tag in "$branch_shortsha_tag" "$branch_latest_tag"; do
              echo "Tagging and pushing $tag..."
              docker tag $built_tag $tag
              docker push $tag
            done

  test:
    docker:
      - image: circleci/python:2.7
      - image: circleci/postgres:9.4-alpine-postgis
    steps:
      - checkout
      - run:
          name: Setup Python environment
          command: |
            sudo apt-get update && sudo apt-get install python-gdal
            pip install virtualenv
            virtualenv env-ci

      - restore_cache:
          keys:
            - pip-v1-{{ checksum "requirements/base.txt" }}-{{ checksum "requirements/development.txt" }}
            - pip-v1-
      - run:
          name: Install dependencies
          command: |
            source env-ci/bin/activate
            pip install --requirement requirements/base.txt --requirement requirements/development.txt
      - save_cache:
          key: pip-v1-{{ checksum "requirements/base.txt" }}-{{ checksum "requirements/development.txt" }}
          paths:
            - "~/.cache/pip"

      - run:
          name: Run unit tests
          command: |
            source env-ci/bin/activate
            python manage.py test

workflows:
  version: 2
  build_and_test:
    jobs:
      - test
      - build:
          requires:
            - test
